package com.medicineCenter.dao;

import com.medicineCenter.model.dataObject.ExpertsLog;
import com.medicineCenter.model.dataObject.ExpertsLogExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface ExpertsLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @SelectProvider(type=ExpertsLogSqlProvider.class, method="countByExample")
    int countByExample(ExpertsLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @DeleteProvider(type=ExpertsLogSqlProvider.class, method="deleteByExample")
    int deleteByExample(ExpertsLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @Delete({
        "delete from experts_log",
        "where experts_log_id = #{expertsLogId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer expertsLogId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @Insert({
        "insert into experts_log (experts_log_id, experts_id, ",
        "name, gender, age, ",
        "school, degree, ",
        "work, title, phone, ",
        "remarks, leader, ",
        "bacteria, category, ",
        "category_two, source, ",
        "CREATE_TIME, attribution, ",
        "create_user, editionNum)",
        "values (#{expertsLogId,jdbcType=INTEGER}, #{expertsId,jdbcType=INTEGER}, ",
        "#{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, ",
        "#{school,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, ",
        "#{work,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, ",
        "#{remarks,jdbcType=VARCHAR}, #{leader,jdbcType=VARCHAR}, ",
        "#{bacteria,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, ",
        "#{categoryTwo,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{attribution,jdbcType=VARCHAR}, ",
        "#{createUser,jdbcType=VARCHAR}, #{editionnum,jdbcType=INTEGER})"
    })
    int insert(ExpertsLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @InsertProvider(type=ExpertsLogSqlProvider.class, method="insertSelective")
    int insertSelective(ExpertsLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @SelectProvider(type=ExpertsLogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="experts_log_id", property="expertsLogId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="experts_id", property="expertsId", jdbcType=JdbcType.INTEGER),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="age", property="age", jdbcType=JdbcType.VARCHAR),
        @Result(column="school", property="school", jdbcType=JdbcType.VARCHAR),
        @Result(column="degree", property="degree", jdbcType=JdbcType.VARCHAR),
        @Result(column="work", property="work", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="remarks", property="remarks", jdbcType=JdbcType.VARCHAR),
        @Result(column="leader", property="leader", jdbcType=JdbcType.VARCHAR),
        @Result(column="bacteria", property="bacteria", jdbcType=JdbcType.VARCHAR),
        @Result(column="category", property="category", jdbcType=JdbcType.VARCHAR),
        @Result(column="category_two", property="categoryTwo", jdbcType=JdbcType.VARCHAR),
        @Result(column="source", property="source", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="attribution", property="attribution", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_user", property="createUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="editionNum", property="editionnum", jdbcType=JdbcType.INTEGER)
    })
    List<ExpertsLog> selectByExample(ExpertsLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @Select({
        "select",
        "experts_log_id, experts_id, name, gender, age, school, degree, work, title, ",
        "phone, remarks, leader, bacteria, category, category_two, source, CREATE_TIME, ",
        "attribution, create_user, editionNum",
        "from experts_log",
        "where experts_log_id = #{expertsLogId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="experts_log_id", property="expertsLogId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="experts_id", property="expertsId", jdbcType=JdbcType.INTEGER),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="age", property="age", jdbcType=JdbcType.VARCHAR),
        @Result(column="school", property="school", jdbcType=JdbcType.VARCHAR),
        @Result(column="degree", property="degree", jdbcType=JdbcType.VARCHAR),
        @Result(column="work", property="work", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="remarks", property="remarks", jdbcType=JdbcType.VARCHAR),
        @Result(column="leader", property="leader", jdbcType=JdbcType.VARCHAR),
        @Result(column="bacteria", property="bacteria", jdbcType=JdbcType.VARCHAR),
        @Result(column="category", property="category", jdbcType=JdbcType.VARCHAR),
        @Result(column="category_two", property="categoryTwo", jdbcType=JdbcType.VARCHAR),
        @Result(column="source", property="source", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="attribution", property="attribution", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_user", property="createUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="editionNum", property="editionnum", jdbcType=JdbcType.INTEGER)
    })
    ExpertsLog selectByPrimaryKey(Integer expertsLogId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @UpdateProvider(type=ExpertsLogSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ExpertsLog record, @Param("example") ExpertsLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @UpdateProvider(type=ExpertsLogSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ExpertsLog record, @Param("example") ExpertsLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @UpdateProvider(type=ExpertsLogSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ExpertsLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_log
     *
     * @mbggenerated Mon Jan 02 16:23:31 CST 2017
     */
    @Update({
        "update experts_log",
        "set experts_id = #{expertsId,jdbcType=INTEGER},",
          "name = #{name,jdbcType=VARCHAR},",
          "gender = #{gender,jdbcType=VARCHAR},",
          "age = #{age,jdbcType=VARCHAR},",
          "school = #{school,jdbcType=VARCHAR},",
          "degree = #{degree,jdbcType=VARCHAR},",
          "work = #{work,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "remarks = #{remarks,jdbcType=VARCHAR},",
          "leader = #{leader,jdbcType=VARCHAR},",
          "bacteria = #{bacteria,jdbcType=VARCHAR},",
          "category = #{category,jdbcType=VARCHAR},",
          "category_two = #{categoryTwo,jdbcType=VARCHAR},",
          "source = #{source,jdbcType=VARCHAR},",
          "CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},",
          "attribution = #{attribution,jdbcType=VARCHAR},",
          "create_user = #{createUser,jdbcType=VARCHAR},",
          "editionNum = #{editionnum,jdbcType=INTEGER}",
        "where experts_log_id = #{expertsLogId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ExpertsLog record);



}