package com.medicineCenter.dao;

import com.medicineCenter.model.dataObject.ExpertsInfo;
import com.medicineCenter.model.dataObject.ExpertsInfoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ExpertsInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @SelectProvider(type=ExpertsInfoSqlProvider.class, method="countByExample")
    int countByExample(ExpertsInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @DeleteProvider(type=ExpertsInfoSqlProvider.class, method="deleteByExample")
    int deleteByExample(ExpertsInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @Delete({
        "delete from experts_info",
        "where experts_id = #{expertsId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer expertsId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @Insert({
        "insert into experts_info (experts_id, name, ",
        "gender, age, school, ",
        "degree, work, title, ",
        "phone, remarks, ",
        "leader, bacteria, ",
        "category_one, category_two, ",
        "source, CREATE_TIME)",
        "values (#{expertsId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{gender,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, ",
        "#{degree,jdbcType=VARCHAR}, #{work,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, ",
        "#{leader,jdbcType=VARCHAR}, #{bacteria,jdbcType=VARCHAR}, ",
        "#{categoryOne,jdbcType=VARCHAR}, #{categoryTwo,jdbcType=VARCHAR}, ",
        "#{source,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(ExpertsInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @InsertProvider(type=ExpertsInfoSqlProvider.class, method="insertSelective")
    int insertSelective(ExpertsInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @SelectProvider(type=ExpertsInfoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="experts_id", property="expertsId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="age", property="age", jdbcType=JdbcType.VARCHAR),
        @Result(column="school", property="school", jdbcType=JdbcType.VARCHAR),
        @Result(column="degree", property="degree", jdbcType=JdbcType.VARCHAR),
        @Result(column="work", property="work", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="remarks", property="remarks", jdbcType=JdbcType.VARCHAR),
        @Result(column="leader", property="leader", jdbcType=JdbcType.VARCHAR),
        @Result(column="bacteria", property="bacteria", jdbcType=JdbcType.VARCHAR),
        @Result(column="category_one", property="categoryOne", jdbcType=JdbcType.VARCHAR),
        @Result(column="category_two", property="categoryTwo", jdbcType=JdbcType.VARCHAR),
        @Result(column="source", property="source", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<ExpertsInfo> selectByExample(ExpertsInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @Select({
        "select",
        "experts_id, name, gender, age, school, degree, work, title, phone, remarks, ",
        "leader, bacteria, category_one, category_two, source, CREATE_TIME",
        "from experts_info",
        "where experts_id = #{expertsId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="experts_id", property="expertsId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.VARCHAR),
        @Result(column="age", property="age", jdbcType=JdbcType.VARCHAR),
        @Result(column="school", property="school", jdbcType=JdbcType.VARCHAR),
        @Result(column="degree", property="degree", jdbcType=JdbcType.VARCHAR),
        @Result(column="work", property="work", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
        @Result(column="remarks", property="remarks", jdbcType=JdbcType.VARCHAR),
        @Result(column="leader", property="leader", jdbcType=JdbcType.VARCHAR),
        @Result(column="bacteria", property="bacteria", jdbcType=JdbcType.VARCHAR),
        @Result(column="category_one", property="categoryOne", jdbcType=JdbcType.VARCHAR),
        @Result(column="category_two", property="categoryTwo", jdbcType=JdbcType.VARCHAR),
        @Result(column="source", property="source", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    ExpertsInfo selectByPrimaryKey(Integer expertsId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @UpdateProvider(type=ExpertsInfoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ExpertsInfo record, @Param("example") ExpertsInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @UpdateProvider(type=ExpertsInfoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ExpertsInfo record, @Param("example") ExpertsInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @UpdateProvider(type=ExpertsInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ExpertsInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table experts_info
     *
     * @mbggenerated Tue Oct 18 10:07:52 CST 2016
     */
    @Update({
        "update experts_info",
        "set name = #{name,jdbcType=VARCHAR},",
          "gender = #{gender,jdbcType=VARCHAR},",
          "age = #{age,jdbcType=VARCHAR},",
          "school = #{school,jdbcType=VARCHAR},",
          "degree = #{degree,jdbcType=VARCHAR},",
          "work = #{work,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "phone = #{phone,jdbcType=VARCHAR},",
          "remarks = #{remarks,jdbcType=VARCHAR},",
          "leader = #{leader,jdbcType=VARCHAR},",
          "bacteria = #{bacteria,jdbcType=VARCHAR},",
          "category_one = #{categoryOne,jdbcType=VARCHAR},",
          "category_two = #{categoryTwo,jdbcType=VARCHAR},",
          "source = #{source,jdbcType=VARCHAR},",
          "CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}",
        "where experts_id = #{expertsId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ExpertsInfo record);
}